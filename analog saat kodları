import tkinter as tk
import time
import math

# Güzel sözler listesi
beautiful_quotes = [
    "Hayat kısa, kuşlar uçuyor.",
    "Mutluluk paylaşıldıkça büyür.",
    "Gülümse, çünkü her şey güzel olacak.",
    "Bugün yeni bir başlangıç.",
    "Hayal et, inan, başar.",
    "Kendine inan, her şey mümkün.",
    "Güzel ol, güzel gör, güzel düşün.",
    "Düşünmek, hayatı değiştirebilir.",
    "Sabır, başarının anahtarıdır.",
    "Her şeyin başı sağlık.",
]

# Ana pencereyi
root = tk.Tk()
root.title("Analog Saat")
root.geometry("500x500")
root.resizable(False, False)

# Canvas oluştur
canvas = tk.Canvas(root, width=500, height=500, bg="white")
canvas.pack()

# Saatin merkezi ve çapı
center_x = 250
center_y = 250
radius = 180

# Sözlerin konumunda hangi index olduğunu takip etmek için bir değişken
quote_index = 0

# Saatin çizimi
def draw_clock():
    canvas.delete("all")
    
    # Saat çerçevesi
    canvas.create_oval(center_x - radius, center_y - radius, center_x + radius, center_y + radius)

    # Saatin işaretçileri 
    for i in range(1, 13):
        angle = math.radians(i * 30 - 90)  # Saatin açısını hesapla
        x = center_x + (radius - 20) * math.cos(angle)
        y = center_y + (radius - 20) * math.sin(angle)
        canvas.create_text(x, y, text=str(i), font=("Helvetica", 14, "bold"))
    
    # Dakika çizgileri (her 5 dakikada bir, saatlerin arasında)
    for i in range(0, 60):
        if i % 5 != 0:  # Saat rakamlarının olduğu yerlerde çizgi olmayacak
            angle = math.radians(i * 6 - 90)  # Dakika çizgisi açısını hesapla
            x1 = center_x + (radius - 10) * math.cos(angle)
            y1 = center_y + (radius - 10) * math.sin(angle)
            x2 = center_x + (radius - 25) * math.cos(angle)
            y2 = center_y + (radius - 25) * math.sin(angle)
            canvas.create_line(x1, y1, x2, y2, width=1, fill="black")

    # Gün numarasını konumu
    day_of_month = time.localtime().tm_mday 
    angle = math.radians(3 * 30 - 90)  
    x = center_x + (radius - 40) * math.cos(angle)
    y = center_y + (radius - 40) * math.sin(angle)
    canvas.create_text(x, y, text=f"{day_of_month}", font=("Helvetica", 12, "bold"), fill="green")

    # "Seyir7" yazısının konumu
    canvas.create_text(center_x, center_y + radius - 40, text="Seyir7", font=("Helvetica", 16, "italic"), fill="red")

    # Güzel sözleri merkeze yerleştir
    canvas.create_text(center_x, center_y, text=beautiful_quotes[quote_index], font=("Helvetica", 16, "italic"), fill="purple")

# Saatin ibrelerini çiz
def draw_hands(hour, minute, second):
    # Saat ibresi
    hour_angle = (hour % 12 + minute / 60) * 30 - 90  # Saatin açısını hesapla
    hour_x = center_x + (radius - 50) * math.cos(math.radians(hour_angle))
    hour_y = center_y + (radius - 50) * math.sin(math.radians(hour_angle))
    canvas.create_line(center_x, center_y, hour_x, hour_y, width=6, fill="black", arrow=tk.LAST)

    # Dakika ibresi
    minute_angle = (minute + second / 60) * 6 - 90  
    minute_x = center_x + (radius - 30) * math.cos(math.radians(minute_angle))
    minute_y = center_y + (radius - 30) * math.sin(math.radians(minute_angle))
    canvas.create_line(center_x, center_y, minute_x, minute_y, width=4, fill="blue", arrow=tk.LAST)

    # Saniye ibresi
    second_angle = second * 6 - 90  # Saniyenin açısını hesapla
    second_x = center_x + (radius - 20) * math.cos(math.radians(second_angle))
    second_y = center_y + (radius - 20) * math.sin(math.radians(second_angle))
    canvas.create_line(center_x, center_y, second_x, second_y, width=2, fill="red", arrow=tk.LAST)

# Gerçek zamanlı güncelle
def update_time():
    global quote_index

    # Şu anki saati al
    current_time = time.localtime()
    hour = current_time.tm_hour
    minute = current_time.tm_min
    second = current_time.tm_sec
    
    # Her dakikada bir söz göster
    if second == 0:  # Her dakika başında
        quote_index = (quote_index + 1) % len(beautiful_quotes)

    # Saatin çizimi
    draw_clock()
    
    # Saatin ibrelerini çiz
    draw_hands(hour, minute, second)
    
    # Fonksiyonu her 1000 ms'de (1 saniye) tekrar çalıştır
    root.after(1000, update_time)

#zamanını başlat
update_time()

# Pencereyi çalıştır
root.mainloop()
